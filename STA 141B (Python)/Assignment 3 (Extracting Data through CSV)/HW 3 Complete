{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1> Richard Safran </h1>\n",
    "<h2> Student ID: 998862635 </h2>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment 3\n",
    "\n",
    "The US Department of Agriculture publishes price estimates for fruits and vegetables [online](https://www.ers.usda.gov/data-products/fruit-and-vegetable-prices/fruit-and-vegetable-prices/). The most recent estimates are based on a 2013 survey of US retail stores.\n",
    "\n",
    "The estimates are provided as a collection of MS Excel files, with one file per fruit or vegetable. The `assignment3_data.zip` file contains the fruit and vegetable files in the directories `fruit` and `vegetables`, respectively."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2> Exercise 1.1. : Use pandas to extract the \"Fresh\" row(s) from the <strong style=\"color:#B0B\">fruit</strong> Excel files. Combine the data into a single data frame. Your data frame should look something like this:</h2>\n",
    "\n",
    "type       | food       | form   | price_per_lb | yield | lb_per_cup | price_per_cup\n",
    "---------- | ---------- | ------ | ------------ | ----- | ---------- | -------------\n",
    "fruit      | watermelon | Fresh1 | 0.333412     | 0.52  | 0.330693   | 0.212033\n",
    "fruit      | cantaloupe | Fresh1 | 0.535874     | 0.51  | 0.374786   | 0.3938\n",
    "vegetables | onions     | Fresh1 | 1.03811      | 0.9   | 0.35274    | 0.406868\n",
    "...        |            |        |              |       |            |\n",
    "\n",
    "\n",
    "It's okay if the rows and columns of your data frame are in a different order. These modules are especially relevant:\n",
    "\n",
    "* [`str` methods](https://docs.python.org/2/library/stdtypes.html#string-methods)\n",
    "* [`os`](https://docs.python.org/2/library/os.html)\n",
    "* [`os.path`](https://docs.python.org/2/library/os.path.html)\n",
    "* [pandas](http://pandas.pydata.org/pandas-docs/stable/): `read_excel()`, `concat()`, `.fillna()`, `.str`, plotting methods\n",
    "\n",
    "Ask questions and search the documentation/web to find the functions you need.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 399,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type</th>\n",
       "      <th>food</th>\n",
       "      <th>form</th>\n",
       "      <th>price_per_lb</th>\n",
       "      <th>yield</th>\n",
       "      <th>lb_per_cup</th>\n",
       "      <th>price_per_cup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apples</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>1.56752</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0.242508</td>\n",
       "      <td>0.422373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apricots</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>3.04007</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.363763</td>\n",
       "      <td>1.1891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>fruit</td>\n",
       "      <td>bananas</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>0.566983</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.330693</td>\n",
       "      <td>0.292965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blackberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>5.77471</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.31967</td>\n",
       "      <td>1.92292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blueberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>4.73462</td>\n",
       "      <td>0.95</td>\n",
       "      <td>0.31967</td>\n",
       "      <td>1.59318</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    type          food     form price_per_lb yield lb_per_cup price_per_cup\n",
       "0  fruit        apples   Fresh1      1.56752   0.9   0.242508      0.422373\n",
       "1  fruit      apricots   Fresh1      3.04007  0.93   0.363763        1.1891\n",
       "2  fruit       bananas   Fresh1     0.566983  0.64   0.330693      0.292965\n",
       "3  fruit  blackberries  Fresh1       5.77471  0.96    0.31967       1.92292\n",
       "4  fruit   blueberries   Fresh1      4.73462  0.95    0.31967       1.59318"
      ]
     },
     "execution_count": 399,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import os.path\n",
    "\n",
    "#Obtain the pathway to the documents\n",
    "path = \"/Users/Ricky/Desktop/STA 141b/HW/Assignment 3/assignment3_data/\"\n",
    "type_path_f = path + \"fruit/\" #Establish the intial pathway into the right folder.\n",
    "files_name_f = os.listdir(type_path_f) #List all the documents inside the directory.\n",
    "files_name_xlsx_f = [f for f in files_name_f if f.endswith(\"xlsx\")] #Only keep all the excel documents and discard the rest.\n",
    "\n",
    "list_items_f = [['type','food']] #Initialize a dataframe that will hold all the type and name of the foods recorded.\n",
    "df_f = pd.DataFrame() #Initialize a dataframe that will hold all the values for the foods recorded.\n",
    "\n",
    "for h in range(len(files_name_xlsx_f)):    \n",
    "    \"\"\"\n",
    "    For loop goes through each of the excel documents in the directory and scrapes them for the relevant information.\n",
    "    \"\"\"\n",
    "    food_specific_f = type_path_f + files_name_xlsx_f[h] #identify the pathway of the individual fruit and grab the whole file.\n",
    "    \n",
    "    if files_name_xlsx_f[h] == \"pineapple.xlsx\":\n",
    "        \"\"\" \n",
    "        Pineapple spreadsheet had the extra two columns which prevented it from being counted. Deleted the extra columns before preceding.\n",
    "        \"\"\"\n",
    "        read_file_f = pd.read_excel(food_specific_f, header = 1) #Drop values that have NA\n",
    "        del read_file_f[\"Unnamed: 7\"]; del read_file_f[\"Unnamed: 8\"] #Del the col with all NA so that the important info does not get deleted when dropping NA\n",
    "        read_file_f = read_file_f.dropna() #Drop all the columns not filled with information\n",
    "\n",
    "    else:\n",
    "        read_file_f = pd.read_excel(food_specific_f, header = 1).dropna() #Drop values that have NA\n",
    "        \n",
    "    read_file_f = read_file_f[read_file_f.iloc[:,0].str.endswith((\"Fresh1\", \"Fresh1 \"))] #Find value that ends with fresh1. 2 variants so both included        \n",
    "    del read_file_f[\"Unnamed: 2\"]; del read_file_f[\"Unnamed: 5\"] #Del the cols not needed that just contained the units\n",
    "    df_f = df_f.append(read_file_f, ignore_index = True)[read_file_f.columns.tolist()] #append to the end and add column names.\n",
    "   \n",
    "    if not read_file_f.empty:\n",
    "        \"\"\"\n",
    "        grab the name of the fruit but only if it had values that were appended to the main data above. Thus, look to see if the current index had any data after I removed the NAs. If no data then skip, if so then add to a seperate data frame that conains type and food.\n",
    "        \"\"\"\n",
    "        item_name_f = ['fruit', files_name_xlsx_f[h][:-5]]\n",
    "        list_items_f.append(item_name_f)\n",
    "\n",
    "type_and_food_df_f = pd.DataFrame(list_items_f[1:],columns=list_items_f[0]) #Freeze the column positions when creating the dataframe\n",
    "df_f = df_f.dropna(1) #Drop the two empty columns at the end\n",
    "final_df_f = pd.concat([type_and_food_df_f, df_f], axis=1, join='inner') #Combine the two data frames into a master set\n",
    "final_df_f = final_df_f.rename(index = str, columns={\"type\":\"type\",\"food\":\"food\",\"Form\":\"form\",\"Average retail price \":\"price_per_lb\",\"Preparation\":\"yield\",\"Size of a \":\"lb_per_cup\",\"Average price\":\"price_per_cup\"})\n",
    "final_df_f.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Exercise 1.2. : Reuse your code from exercise 1.1 to extract the \"Fresh\" row(s) from the <strong style=\"color:#B0B\">vegetable</strong> Excel files. </h2>\n",
    "\n",
    "Does your code produce the correct prices for tomatoes? If not, why not? Do any other files have the same problem as the tomatoes file?\n",
    "\n",
    "You don't need to extract the prices for these problem files. However, make sure the prices are extracted for files like asparagus that don't have this problem."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 402,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type</th>\n",
       "      <th>food</th>\n",
       "      <th>form</th>\n",
       "      <th>price_per_lb</th>\n",
       "      <th>yield</th>\n",
       "      <th>lb_per_cup</th>\n",
       "      <th>price_per_cup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>vegetables</td>\n",
       "      <td>acorn_squash</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>1.172248</td>\n",
       "      <td>0.458554</td>\n",
       "      <td>0.451948</td>\n",
       "      <td>1.15536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>vegetables</td>\n",
       "      <td>artichoke</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>2.213050</td>\n",
       "      <td>0.375309</td>\n",
       "      <td>0.385809</td>\n",
       "      <td>2.27497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>vegetables</td>\n",
       "      <td>asparagus</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>3.213494</td>\n",
       "      <td>0.493835</td>\n",
       "      <td>0.396832</td>\n",
       "      <td>2.58227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>vegetables</td>\n",
       "      <td>avocados</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>2.235874</td>\n",
       "      <td>0.740753</td>\n",
       "      <td>0.31967</td>\n",
       "      <td>0.964886</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>vegetables</td>\n",
       "      <td>brussels_sprouts</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>2.763553</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.341717</td>\n",
       "      <td>0.890898</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         type              food    form  price_per_lb     yield lb_per_cup  \\\n",
       "0  vegetables      acorn_squash  Fresh1      1.172248  0.458554   0.451948   \n",
       "1  vegetables         artichoke  Fresh1      2.213050  0.375309   0.385809   \n",
       "2  vegetables         asparagus  Fresh1      3.213494  0.493835   0.396832   \n",
       "3  vegetables          avocados  Fresh1      2.235874  0.740753    0.31967   \n",
       "4  vegetables  brussels_sprouts  Fresh1      2.763553      1.06   0.341717   \n",
       "\n",
       "  price_per_cup  \n",
       "0       1.15536  \n",
       "1       2.27497  \n",
       "2       2.58227  \n",
       "3      0.964886  \n",
       "4      0.890898  "
      ]
     },
     "execution_count": 402,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Obtain the pathway to the documents\n",
    "type_path_v = path + \"vegetables/\" #Establish the intial pathway into the right folder.\n",
    "files_name_v = os.listdir(type_path_v) #List all the documents inside the directory.\n",
    "files_name_xlsx_v = [e for e in files_name if e.endswith(\"xlsx\")] #Only keep all the excel documents and discard the rest.\n",
    "\n",
    "list_items_v = [['type','food']] #Initialize a dataframe that will hold all the type and name of the foods recorded.\n",
    "df_v = pd.DataFrame() #Initialize a dataframe that will hold all the values for the foods recorded.\n",
    "\n",
    "for h in range(len(files_name_xlsx_v)):\n",
    "    \"\"\"\n",
    "    For loop that goes through each of the excel documents in the directory and scrapes them for the relevant information.\n",
    "    \"\"\"\n",
    "    \n",
    "    food_specific_v = type_path_v + files_name_xlsx_v[h] #identify the pathway of the vegetable and grab the whole excel file.\n",
    "    read_file_v = pd.read_excel(food_specific_v, header = 1).dropna() #Drop values that have NA\n",
    "    read_file_v = read_file_v[read_file_v.iloc[:,0].str.endswith(('Fresh1', 'Fresh1 '))] #Find value that ends with fresh        \n",
    "    del read_file_v[\"Unnamed: 2\"]; del read_file_v[\"Unnamed: 5\"] #Del the col not needed\n",
    "    df_v = df_v.append(read_file_v, ignore_index = True)[read_file_v.columns.tolist()] #append the values for the given vegtable to the end\n",
    "   \n",
    "    if not read_file_v.empty:\n",
    "        \"\"\"\n",
    "        Grab the name of the vegetable but only if it had values that were appended to the main data above. Thus, look to see if the current index had any data after I removed the NAs. If no data then skip, if so then add to a seperate data frame that conains type and food.\n",
    "        \"\"\"\n",
    "        item_name_v = ['vegetables', files_name_xlsx_v[h][:-5]]\n",
    "        list_items_v.append(item_name_v)\n",
    "\n",
    "type_and_food_df_v = pd.DataFrame(list_items_v[1:],columns=list_items_v[0]) #Transform the type and food columns into a dataframe. Obtain the headings.\n",
    "df_v = df_v.dropna(1) #Drop the additional columns that contained information found in some of the excel documents. What is left is all the data for each of the fruit.\n",
    "final_df_v = pd.concat([type_and_food_df_v, df_v], axis=1, join='inner') #Combine the two dataframes into a whole list. Made sure that only vegtables that had data were added to the type and food dataset. Thus, same dimensions and all values are aligned.\n",
    "#df.rename(index=str, columns={\"A\": \"a\", \"B\": \"c\"})\n",
    "final_df_v = final_df_v.rename(index = str, columns={\"type\":\"type\",\"food\":\"food\",\"Form\":\"form\",\"Average retail price \":\"price_per_lb\",\"Preparation\":\"yield\",\"Size of a \":\"lb_per_cup\",\"Average price\":\"price_per_cup\"}) #Rename the dataset to the appropriate value.\n",
    "final_df_v.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "My code does not register the irregularities mentioned above with vegetables like tomatoes, carrots, cauliflower, celery, or brocoli. This is because these items have multiple variants underneath the fresh label. Consequently, my code only looks for a row that ends with fresh1 and then proceeds to check for the values in that row after eliminating the NAs. Since the informaiton for these vegetbales are stored in the subsequent rows with no information in the fresh row, the row gets deleted and the information located in the following area gets overlooked. To fix this I would want to write a function that checks the subsequent row after fresh and looks to see if the tab character was before the next type of food. If so then I would have the function return the values of interest and if not than break the function. Additionally, I would have to account for odd cases such as cabbage where 2 different variants are lister in subsequent rows with the freh tag for both of them. \n",
    "\n",
    "Examining the rest of my code everything else is accurate."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Exercise 1.3. : Remove rows without a price from the vegetable data frame and then combine the fruit and vegetable data frames. Make sure all columns of numbers are numeric (not strings).</h2>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Due to format of my function, fruits and vegetable rows that contained any NAs were deleted. As a result, all of the values in my prior two databases for fruits and vegetables contained prices. Thus, I did not have to remove any rows without a price."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 403,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "type              object\n",
      "food              object\n",
      "form              object\n",
      "price_per_lb     float64\n",
      "yield            float64\n",
      "lb_per_cup       float64\n",
      "price_per_cup    float64\n",
      "dtype: object\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type</th>\n",
       "      <th>food</th>\n",
       "      <th>form</th>\n",
       "      <th>price_per_lb</th>\n",
       "      <th>yield</th>\n",
       "      <th>lb_per_cup</th>\n",
       "      <th>price_per_cup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apples</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>1.567515</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.242508</td>\n",
       "      <td>0.422373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apricots</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>3.040072</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.363763</td>\n",
       "      <td>1.189102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>fruit</td>\n",
       "      <td>bananas</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>0.566983</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.330693</td>\n",
       "      <td>0.292965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blackberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>5.774708</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.319670</td>\n",
       "      <td>1.922919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blueberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>4.734622</td>\n",
       "      <td>0.95</td>\n",
       "      <td>0.319670</td>\n",
       "      <td>1.593177</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    type          food     form  price_per_lb  yield  lb_per_cup  \\\n",
       "0  fruit        apples   Fresh1      1.567515   0.90    0.242508   \n",
       "1  fruit      apricots   Fresh1      3.040072   0.93    0.363763   \n",
       "2  fruit       bananas   Fresh1      0.566983   0.64    0.330693   \n",
       "3  fruit  blackberries  Fresh1       5.774708   0.96    0.319670   \n",
       "4  fruit   blueberries   Fresh1      4.734622   0.95    0.319670   \n",
       "\n",
       "   price_per_cup  \n",
       "0       0.422373  \n",
       "1       1.189102  \n",
       "2       0.292965  \n",
       "3       1.922919  \n",
       "4       1.593177  "
      ]
     },
     "execution_count": 403,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create final_data_set\n",
    "final_data_set = final_df_f.append(final_df_v, ignore_index = True)\n",
    "\n",
    "#Set the columns for the last 4 columns equal to the float type to incorporate the decimal places.\n",
    "final_data_set[['price_per_lb', 'yield','lb_per_cup','price_per_cup']] = final_data_set[['price_per_lb', 'yield','lb_per_cup','price_per_cup']].astype(float)\n",
    "print final_data_set.dtypes\n",
    "final_data_set.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "__Exercise 1.4.__ Discuss the questions below (a paragraph each is sufficient). Use plots to support your ideas.\n",
    "\n",
    "* What kinds of fruits are the most expensive (per pound)? What kinds are the least expensive?\n",
    "* How do the price distributions compare for fruit and vegetables?\n",
    "* Which foods are the best value for the price?\n",
    "* What's something surprising about this data set?\n",
    "* Which foods do you expect to provide the best combination of price, yield, and nutrition? A future assignment may combine this data set with another so you can check your hypothesis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>What kinds of fruits are the most expensive (per pound)? What kinds are the least expensive?</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 404,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Most expensive fruit per pound is raspberries at 6.98 per lb.\n",
      "Least expensive fruit per pound is: watermelon at 0.33 per lb.\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1167605d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fruits = final_data_set[final_data_set['type'] == 'fruit']\n",
    "fruits = fruits.set_index('food')\n",
    "\n",
    "#Max\n",
    "expensive = fruits['price_per_lb'].argmax()\n",
    "cost_exp = round(fruits['price_per_lb'].max(),2)\n",
    "cheap = fruits['price_per_lb'].argmin()\n",
    "cost_che = round(fruits['price_per_lb'].min(),2)\n",
    "print \"Most expensive fruit per pound is\", expensive, \"at\", cost_exp, \"per lb.\"\n",
    "print \"Least expensive fruit per pound is:\", cheap, \"at\", cost_che, \"per lb.\"\n",
    "\n",
    "#Top three and bottom three most expensive fruits in a single database\n",
    "expensive_fruits = fruits.sort_values('price_per_lb', ascending=False).head(3)\n",
    "cheap_fruits = fruits.sort_values('price_per_lb', ascending=True).head(3)\n",
    "extreme_fruits = expensive_fruits.append(cheap_fruits).sort_values('price_per_lb', ascending=False)\n",
    "\n",
    "#Set up the x axis values with names saved to a list and a position for the inital graph.\n",
    "objects = extreme_fruits.index.values.tolist()\n",
    "y_pos = np.arange(len(objects))\n",
    "\n",
    "#Plot the data\n",
    "plt.bar(y_pos, extreme_fruits['price_per_lb'], align='center', alpha=0.7)\n",
    "\n",
    "#Set up the graphs\n",
    "plt.xticks(y_pos, objects, rotation = 'vertical')\n",
    "plt.ylabel('Dollar per Lb')\n",
    "plt.title('3 Most Expensive and 3 Cheapest Fruits per Lb')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on my findings raspberries are the most expensive fruit per lb at 6.98/lb while watermellon is the cheapest at 0.33/lb."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>How do the price distributions compare for fruit and vegetables?</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 405,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1168dc6d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\nH5LWyPdjZ2V7k76dNnLpr9lIG9Xf5NthTMXdpOlubyP1YR4M/ErSqyJifrFyNjjpN6QJaA4gTUB0\nuqR7I016Y2ZjxxbA+dm39EWkKa2PIDXB/7CVgdnKsrFA/V1i+WSkSa5Gezyj+sftWp5URETxSoXP\nKf0mxetI/aRFR5J+I6M6UOsWSTuSRms7qRgeozqzto72IKm//XDSwMBHSVNDHxsRjc5QO5q087n6\nd9K4i3ouZMWMkiOxH4OJp0zt/D8asrYaU5E1Y+5PGlC3XUQUJy9B0p9IA7A+nis7mPQ7AY3Oimhm\nZiNI0g6sPNNu0UMRccNYjWe0aHlLBTw70cxVpFnsHiONql0lochszMoTz5A9Xk/SuMjN4194jueR\nRt5WSCOTzcxs5Cyl/1kt15BU63eChku7xdPuxpOuArwoVv2pg2e1RVLBiuv0J5IuDTxL0s79JBbN\n2Isa18SbmZlZw97Lyj8AuJK2SCoiTetc/cGq6yS9BvgYafxE0X2s2g+2EfBovVaKTAXg7LPPZsqU\nKf1Us04xY8YMZs8u/lCrmbUDn5+jy/z585k+fToMMN17WyQVNaxG/b6uq1j1J4b3pPYvGuYtA5gy\nZQpTp7pFazSYOHGi/5dmbcrn56jV7/CBlicVko4nTQZyF2mK1fcCu5ASBSSdQJrVrzoXxanAhyR9\nlTQ18+6kLpOO/x16MzOzTtbypII0P/uZpCmEF5MuD9szVvzy3MbAptXKEVGRtB8wmzRf+j3AoRFx\n6YhGbWZmZitpeVIRER8YYPn7a5RdAXQPW1BmZmY2aC2fptusWT09Pa0Owczq8Pk5NjmpsI7lNy2z\n9uXzc2xyUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJh\nZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFm\nZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZm\nZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZmalcFJhZmZmpXBSYWZmZqVwUmFmZqWqVCrstNPb\nqFQqrQ7FRpiTCjMzK02lUmHatEOYO/dopk07xInFGOOkwszMSlFNKCqVM4BdqFTOcGIxxjipMDOz\n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\nrkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11294d050>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "veggies = final_data_set[final_data_set['type'] == 'vegetables']\n",
    "x_labels = ['fruits','vegetables']\n",
    "pos = np.arange(len(x_labels))+1\n",
    "\n",
    "measure = ['price_per_lb','price_per_cup']\n",
    "\n",
    "for a in range(len(measure)):\n",
    "    plt.boxplot([fruits[measure[a]],veggies[measure[a]]], 0, 'gD')\n",
    "    plt.ylabel('Dollar per Lb')\n",
    "    plt.xticks(pos, x_labels)\n",
    "    plt.title('Comparison Fruit and Vegtables:'+ measure[a])\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on my above graphs I can conclude that veggies on average cost more than fruit based on both a cup size and by pound. This difference is more exaggerated for pounds than cups but the difference is still noticeable in each case. What changes between these two measures is the variance. Looking at the y axis fruits go from being within the range of 0 to 7 in price per lb compared to the smaller range of 0 to 2.5 in price per cup. Meanwhile, the range of veggies remain relatively uncahnged. When measuring by price per lb fruits vary  more in regard to the interquartile range due to specific fruits (such as berries) having dramatically higher prices than other fruits. Switching to price per cup, vegtables take on the higher interquartile range. \n",
    "\n",
    "Overall, vegtables will be on average more expensive than fruit no matter which measure an individual uses. However, there are specific fruits that are very dense and small that result in the highest price per lb. As a result, when purchasing vegetables an individual can expect to pay a relatively constant price per lb ranging across 2 or 3 dollars depending on the measure, while when purchasing fruits the individual will pay typically in a range of 3 1/2 dollars buying price per lb and a more consistent 1 1/2 dollars price per cup, exluding berries which are all around expensive."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Which foods are the best value for the price?</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 406,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nSa0aTyoiYj1gLnBef1tmJnAusPsInyOAxwJ/HY8YJUnS8BpPKoDNgWnAkrb2JcDsET7HvwAzgDNr\njEuSJI2RkuiNAAAapUlEQVTCuk0HsLYi4iDg/cArM3NZ0/FIkjRVdUNSsQxYDcxqa58F3DbUjhHx\neuDLwAGZef5IDjZv3jxmzpw5oK2vr4++vr4RByxJ0mS1cOFCFi5cOKBtxYoVI9q38aQiMx+MiEXA\nPsBZ8MgYiX2Azw62X0T0AV8FDszMn4z0ePPnz2fOnDlrF7QkSZNUpy/aixcvZu7cucPu23hSUTkB\nWFAlF5dQZoNsCCwAiIjjgK0y8+Dq/kHVY0cBv46I/l6OVZm5cmJDlyRJ0CVJRWaeWdWkOJZy2eMy\nYL/MXFptMhvYpmWXt1AGd36huvX7OoNMQ5UkSeOrK5IKgMw8EThxkMcOabv/ogkJSpIkjVg3TCmV\nJEmTgEmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmq\nhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmF\nJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmq\nhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqhUmFJEmqRdckFRFxZERcHxGrIuLiiNhtiG1nR8TpEfH7\niFgdESdMZKySJOnRuiKpiIgDgeOBY4BdgcuBsyNi80F2WR+4HfgwcNmEBClJkobUFUkFMA84KTNP\nzcxrgCOAe4FDO22cmTdm5rzMPA1YOYFxSpKkQTSeVETEesBc4Lz+tsxM4Fxg96bikiRJo9N4UgFs\nDkwDlrS1LwFmT3w4kiRpLNZtOoCJNm/ePGbOnDmgra+vj76+voYikiSpeyxcuJCFCxcOaFuxYsWI\n9u2GpGIZsBqY1dY+C7it7oPNnz+fOXPm1P20kiRNCp2+aC9evJi5c+cOu2/jlz8y80FgEbBPf1tE\nRHX/oqbikiRJo9MNPRUAJwALImIRcAllNsiGwAKAiDgO2CozD+7fISJ2BgLYCNiiuv9AZl49wbFL\nkiS6JKnIzDOrmhTHUi57XAbsl5lLq01mA9u07XYpkNXPc4CDgBuB7cc/YkmS1K4rkgqAzDwROHGQ\nxw7p0Nb4pRtJkrSGH8ySJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWS\nJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkW\nJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWS\nJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWJhWSJKkWXZNURMSREXF9RKyKiIsjYrdh\ntn9hRCyKiPsi4tqIOHiiYp1K/vznhU2H0JM8b6PnORsbz9voec7GT1ckFRFxIHA8cAywK3A5cHZE\nbD7I9tsBPwTOA3YGPgN8NSJePBHxTiV/+Yu/fGPheRs9z9nYeN5Gz3M2froiqQDmASdl5qmZeQ1w\nBHAvcOgg278N+FNmviczf5+ZXwC+Uz2PJElqQONJRUSsB8yl9DoAkJkJnAvsPshuz60eb3X2ENtL\nkqRx1nhSAWwOTAOWtLUvAWYPss/sQbbfOCLWrzc8SZI0Eus2HcAE2gDg6quvbjqOUbn55pu5994V\nPPTQedx115UTfvz77ruN2277rwk/7v33L+GBB1Zw5ZVXsmLFilHv73kb/XnznPleGw3fa6O3tu+1\nJrV8dm4w1HZRrjQ0p7r8cS/w2sw8q6V9ATAzM1/TYZ+fAYsy810tbW8G5mfm4wY5zkHA6fVGL0nS\nlPKGzDxjsAcb76nIzAcjYhGwD3AWQEREdf+zg+z2S+ClbW37Vu2DORt4A3ADcN9ahCxJ0lSzAbAd\n5bN0UI33VABExOuABZRZH5dQZnEcADw1M5dGxHHAVpl5cLX9dsBvgROBkykJyKeBl2Vm+wBOSZI0\nARrvqQDIzDOrmhTHArOAy4D9MnNptclsYJuW7W+IiJcD84GjgFuAw0woJElqTlf0VEiSpN7XDVNK\nJUnSJGBSIUmSamFSIUmSatEVAzXVPSJiGvBmyoyaLWlLPDNz7wbC6noR8Q+U2UtPBHbPzBsj4mjg\n+syc+Co7kjqKiA0y07IC48SeCrX7THWbBlxJWTG29aY2EfE24ATgx8AmlHMHcCdwdFNxdbuImB4R\nG7bcf0JEHB0R+zYZV7eLiDkR8YyW+6+KiB9ExMci4jFNxtatImKdiHh/RPwZuDsitq/aPxwRhzUc\n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\nsuYAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11768fe50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\ntFlzelo2lW4Sa0aXm5kV7SW6/3s0LJtGnJdWi8dax4akRQ1nR0TNBLQVEo+GKN1u/Grg9IgorQ7Y\nV9f+JlGxzLWZmZk15GNUX8sIaI3EYwlpfvbYivKxpLnllTYmLa6zm6TS3STXI62e+zJpXYHbs33r\nbbNkIcBVV13Fzjuvs5Cg1dDe3s706dOLDmPA8XlrnM9Zc3zeGudz1rj58+fz8Y9/HHq4zUDhiUdE\nvCJpLmmBmOvhtfX39wXOq7JLF+ve/+AE0q2vD2XNAd9ZpY39svJaXgLYeeedGT/ePYX1Gj16tM9X\nE3zeGudz1hyft8b5nPVKt0MVCk88MtNIy/zOZc102o2AGQCSziKt6jgl0opna02HlfQM8FKsvczy\nucDtkqaSptO2kQaxHtvPx2JmZmY1tETiERGzsrnhZ5Iuh9wDTIqI0u3MxwENjdiOiDslTSYtmfwN\n4FHS0sFew8PMbADo7Oykq6tXt41p2osvvsiCBQt6rtgPNtlkE8aMGVPIa+ehJRIPgIi4ELiwxraj\netj3DOCMKuXXku5XYWZmA0hnZyeTJx/P0qUrC3n9BQse4PDDTyrktTfbbDgzZ140aJOPlkk8bOBq\na2vruZKtw+etcT5nzRmI562rq4ulS1cyfPjJjBiR1xIla7z5zT9n000Pyv11V6x4iqVLz6Grq8uJ\nh1ktA/GPWivweWucz1lzBvJ5GzFiK0aO3D73191uu2J6OwBWFtPJk5tWWTLdzMzMhgAnHmZmZpYb\nJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsn\nHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyce\nZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpablkk8\nJJ0g6XFJKyTNkbRHN3XfLen3kpZIWi5pvqSTKupMkbRa0qrs62pJy/v/SMzMzKyW9YsOAEDSEcA5\nwKeBu4B2YLakHSNiSZVdXgS+C9yXfb83cKmkFyLi8rJ6y4AdAWXPo58OwczMzOrQKj0e7cAlEXFl\nRDwEHAcsB46uVjki7omIayJifkQ8GREzgdnAPutWjc6IeCZ7dPbrUZiZmVm3Ck88JG0ATABuLZVF\nRAC3ABPrbGP3rO7tFZtGSVoo6UlJ10napW+iNjMzs2YUnngAmwPDgMUV5YuBcd3tKOkpSS+RLs9c\nEBFXlG1+mNRjcjDwMdKx3iFpy74K3MzMzBrTEmM8emFvYBSwJ3C2pMci4hqAiJgDzClVlHQnMB/4\nDHB6d422t7czevTotcra2tpoa2vr2+jNzMwGoI6ODjo6OtYqW7ZsWV37tkLisQRYBYytKB8LLOpu\nx4h4Ivv2AUnjgK8C19So+6qku4G39hTQ9OnTGT9+fE/VzMzMhqRqH8bnzZvHhAkTety38EstEfEK\nMBfYt1QmSdnzOxpoahgwvNZGSesBbweebi5SMzMz661W6PEAmAbMkDSXNdNpNwJmAEg6C9gyIqZk\nzz8LPAk8lO3/z8DJwHdKDUo6lXSp5TFgU+AUYGugfLqtmZmZ5aglEo+ImCVpc+BM0iWWe4BJZdNf\nxwFble2yHnAWsC3wKrAA+GJEXFpW5/XApdm+z5F6VSZm03XNzMysAC2ReABExIXAhTW2HVXx/Hzg\n/B7amwpM7bMAzczMrNcKH+NhZmZmQ4cTDzMzM8uNEw8zMzPLjRMPMzMzy40TDzMzM8uNEw8zMzPL\njRMPMzMzy40TDzMzM8uNEw8zMzPLjRMPMzMzy40TDzMzM8uNEw8zMzPLjRMPMzMzy40TDzMzM8uN\nEw8zMzPLjRMPMzMzy40TDzMzM8uNEw8zMzPLjRMPMzMzy40TDzMzM8uNEw8zMzPLjRMPMzMzy40T\nDzMzM8uNEw8zMzPLzfpFB2BmNhR0dnbS1dVVdBi522STTRgzZkzRYVgLceJhZtbPOjs7mTz5eJYu\nXVl0KLnbbLPhzJx5kZMPe40TDzOzftbV1cXSpSsZPvxkRozYquhwcrNixVMsXXoOXV1dTjzsNS2T\neEg6Afh3YBxwL/D5iPhjjbrvBs4G3gZsBDwBXBIR36modzhwJrAt8AjwpYj4RX8dg5lZd0aM2IqR\nI7cvOoxcrRx6nTzWg5YYXCrpCOAc4HRgd1LiMVvS5jV2eRH4LrAPKfn4GvB1SZ8qa3MvYCZwGbAb\n8DPgOkm79NdxmJmZWfdaIvEA2kk9FldGxEPAccBy4OhqlSPinoi4JiLmR8STETETmE1KREpOBH4R\nEdMi4uGIOA2YB3yufw/FzMzMaik88ZC0ATABuLVUFhEB3AJMrLON3bO6t5cVT8zaKDe73jbNzMys\n77XCGI/NgWHA4oryxcBO3e0o6SlgTLb/VyPiirLN42q0Oa5X0ZqZmVnTWiHx6I29gVHAnsDZkh6L\niGsKjsnMzMxqaIXEYwmwChhbUT4WWNTdjhHxRPbtA5LGAV8FSonHombaBGhvb2f06NFrlbW1tdHW\n1tbTrmZmZoNeR0cHHR0da5UtW7asrn0LTzwi4hVJc4F9gesBJCl7fl4DTQ0Dhpc9v7NKG/tl5d2a\nPn0648ePb+ClzczMho5qH8bnzZvHhAkTety38MQjMw2YkSUgd5FmuWwEzACQdBawZURMyZ5/FngS\neCjb/5+Bk4HydTzOBW6XNBW4EWgjDWI9tr8PxszMzKpricQjImZla3acSboccg8wKSI6syrjgPLl\n/tYDziItDPYqsAD4YkRcWtbmnZImA9/IHo8Ch0TEg/18OGZmZlZDSyQeABFxIXBhjW1HVTw/Hzi/\njjavBa7tkwDNDPDNzsysd1om8TCz1uebnflmZ2a95cTDzOrmm535ZmdmveXEw8wa5pudmVmzCl8y\n3czMzIYOJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyce\nZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5m\nZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZmZpYbJx5mZmaWGyceZmZmlhsnHmZm\nZpablkk8JJ0g6XFJKyTNkbRHN3X/VdLNkp6RtEzSHZL2r6gzRdJqSauyr6slLe//IzEzM7NaepV4\nKNPbICQdAZwDnA7sDtwLzJa0eY1d3gPcDBwAjAduA34uadeKesuAcWWPbXobq5mZmTWvqcRD0jGS\n7gdeAl6SdL+kT/Uijnbgkoi4MiIeAo4DlgNHV6scEe0R8d8RMTciFkTEV4BHgYPWrRqdEfFM9ujs\nRYxmZmbWSw0nHpLOBM4Ffg4cnj1+DkzPtjXa3gbABODWUllEBHALMLHONgRsDDxbsWmUpIWSnpR0\nnaRdGo3PzMzM+s76TexzPHBsRHSUlV0v6T7gu8BpDba3OTAMWFxRvhjYqc42vgiMBGaVlT1M6jG5\nDxid1blD0i4R8bcGYzQzM7M+0EzisQHwf1XK5zbZXq9ImgycChwcEUtK5RExB5hTVu9OYD7wGdJY\n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\nM2tMIz0eb2DdcRjlFgOvbzKOacAMSXNZM512I9LYESSdBWwZEVNKO0jalTRNdhQwJnv+cmkpd0mn\nki61PAZsCpwCbE0ao2JmZmYFaCTxGAa82s32VQ2295qImCVpc+BM0iWWe4BJZVNhxwFbVex2N2vW\n5RgPTAaeALbLyl4PXJrt+xypV2ViRDzUTIxmZmbWe40kCiL1SqyssX14bwKJiAuBC2tsO6pKWbeX\niSJiKjC1NzGZmZlZ32ok8fhBHXVaYkaLmZmZtaa6E49qvQ5mZmZmjfBt7M3MzCw3TjzMzMwsN048\nzMzMLDdOPMzMzCw3TjzMzMwsN048zMzMLDdOPMzMzCw3TjzMzMwsN048zMzMLDdOPMzMzCw3TjzM\nzMwsN048zMzMLDdOPMzMzCw3TjzMzMwsN048zMzMLDdOPMzMzCw3TjzMzMwsN048zMzMLDdOPMzM\nzCw3TjzMzMwsN048zMzMLDdOPMzMzCw3TjzMzMwsN048zMzMLDdOPMzMzCw3LZN4SDpB0uOSVkia\nI2mPbuqOk3S1pIclrZI0rUa9wyXNz9q8V9IB/XcEZmZm1pOWSDwkHQGcA5wO7A7cC8yWtHmNXYYD\nzwBfA+6p0eZewEzgMmA34GfAdZJ26dvozczMrF4tkXgA7cAlEXFlRDwEHAcsB46uVjkinoiI9oi4\nCuiq0eaJwC8iYlpEPBwRpwHzgM/1Q/xmZmZWh8ITD0kbABOAW0tlERHALcDEXjQ9MWuj3Oxetmlm\nZma9UHjiAWwODAMWV5QvBsb1ot1x/dCmmZmZ9UIrJB5mZmY2RKxfdADAEmAVMLaifCywqBftLmq2\nzfb2dkaPHr1WWVtbG21tbb0Ix8zMbHDo6Oigo6NjrbJly5bVtW/hiUdEvCJpLrAvcD2AJGXPz+tF\n03dWaWO/rLxb06dPZ/z48b14aTMzs8Gr2ofxefPmMWHChB73LTzxyEwDZmQJyF2kWS4bATMAJJ0F\nbBkRU0o7SNoVEDAKGJM9fzki5mdVzgVulzQVuBFoIw1iPTaXIzIzM7N1tETiERGzsjU7ziRdDrkH\nmBQRnVmVccBWFbvdDUT2/XhgMvAEsF3W5p2SJgPfyB6PAodExIP9eSxmZmZWW0skHgARcSFwYY1t\nR1Up63FgbERcC1zb++jMzMysL3hWi5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomH\nmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZ\nmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZ\nmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeWmZRIPSSdIelzSCklz\nJO3RQ/33Spor6SVJj0iaUrF9iqTVklZlX1dLWt6/R2FmZmbdaYnEQ9IRwDnA6cDuwL3AbEmb16i/\nLXADcCuwK3AucLmk/SqqLgPGlT226YfwzczMrE4tkXgA7cAlEXFlRDwEHAcsB46uUf944M8RcUpE\nPBwRFwA/ztopFxHRGRHPZI/OfjsCMzMz61HhiYekDYAJpN4LIGULwC3AxBq77ZltLze7Sv1RkhZK\nelLSdZJ26aOwzczMrAmFJx7A5sAwYHFF+WLS5ZFqxtWov4mk4dnzh0k9JgcDHyMd6x2StuyLoM3M\nzKxx6xcdQH+JiDnAnNJzSXcC84HPkMaS1NTe3s7o0aPXKmtra6Otra0fIjUzMxtYOjo66OjoWKts\n2bJlde3bConHEmAVMLaifCywqMY+i2rU74qIldV2iIhXJd0NvLWngKZPn8748eN7qmZmZjYkVfsw\nPm/ePCZMmNDjvoVfaomIV4C5wL6lMknKnt9RY7c7y+tn9s/Kq5K0HvB24OnexGtmZmbNKzzxyEwD\njpX0SUlvAy4GNgJmAEg6S9IPyupfDGwn6WxJO0n6LHBY1g7ZPqdK2k/SWyTtDlwNbA1cns8hmZmZ\nWaVWuNRCRMzK1uw4k3TJ5B5gUtn013HAVmX1F0o6EJgOnAj8BTgmIspnurweuDTb9zlSr8rEbLqu\nmZmZFaAlEg+AiLgQuLDGtqOqlP2WNA23VntTgal9FqCZmZn1WqtcajEzM7MhwImHmZmZ5caJh5mZ\nmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ\n5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnl\nxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXGiYeZmZnlxomHmZmZ5caJh5mZmeXG\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1021127d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for a in range(len(measure)):\n",
    "    cheap_price_per = final_data_set.sort_values(measure[a], ascending=True).head(5)\n",
    "    cheap_price_per = cheap_price_per.set_index('food')\n",
    "\n",
    "    objects_che = cheap_price_per.index.values.tolist()\n",
    "    y_pos_che = np.arange(len(objects_che))\n",
    "\n",
    "    #Plot the data\n",
    "    plt.bar(y_pos_che, cheap_price_per[measure[a]], align='center', alpha=0.7)\n",
    "\n",
    "    #Set up the graphs\n",
    "    plt.xticks(y_pos_che, objects_che, rotation = 'vertical')\n",
    "    plt.ylabel('Dollar per Lb')\n",
    "    plt.title('Best Value for the ' + measure[a])\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on my above findings four of the five best value foods are considered the best value across both measurements of price per cup and price per lb. Therefore, if an individual wanted to get the most of their money the should consider buying potatoes, watermlon, bananas, and cantaloupe. Each of these will provide a large amount of food at a small price per pound and food per cup. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>What's something surprising about this data set?</h2>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Somethings that I were suprised were the incorrect notations on the spreadsheet, such as there being an extra space for blackberries after fresh1. While this might not seem like a big deal for the inputter a simple mistake such as an extra space caused an extra 20 minutes of deducing followed by a couple lines of code. In regards to the actual results I was suprised by how expensive berries were. I knew that all types of berries were epxensive, but just comparing them to other fruits really puts into perspective how bad a deal buying berries are. Additionally, I was shocked by how cheap watermelon was. I love watermelon but I hate buying it at the store because it appears expensive. However, it never occured to me to compare food across weight or cup size which when done makes watermelon the cheapest food available in price per lb and second cheapest in price per cup. When I compared fruits and vegetables I was somewhat suprised that vegetables were on average more expensive than fruit. Vegtables for me always seem like a staple food while fruit is more of a delicacy. Examining the data I learned this was only true for certain types of fruits while almost all vegtables were within the expected pricing range. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Which foods do you expect to provide the best combination of price, yield, and nutrition? A future assignment may combine this data set with another so you can check your hypothesis.</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nt955zPrjceudx2z1WWMWFKuWuz333HPPtYOOJEk9OO+885g7dy7A3Mw8b7ztrKmQJEm1MKmQJEm1\nMKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQ\nJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1MKmQJEm1\nWKfpACRJa55FixYxMjLSdBhTbubMmWy++eZNh7HamFRIkqbUokWL2GuvA1i8eFnToUy5WbPW44QT\nvjZtEwuTCknSlBoZGWHx4mWst957mDFj66bDmTJLl17L4sWHMDIyYlIhSVKdZszYmg033K7pMKbU\nsmleOWNSIUmTZP8AqTCpkKRJsH/A9O0foN6ZVEjSJNg/YPr2D1DvTCokqQb2D5Cc/EqSJNXEpEKS\nJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXC\npEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNXCpEKSJNVinaYDkDQ4Fi1a\nxMjISNNhTLmZM2ey+eabNx2GNPQGJqmIiAOB/wfMBi4A3pGZv+tiv52BM4ALM3POag1SmsYWLVrE\nXnsdwOLFy5oOZcrNmrUeJ5zwNRMLaZIGIqmIiNcAhwBvAc4B5gOnRMRjM/OWCfbbBPgWcBqwxVTE\nKk1XIyMjLF68jPXWew8zZmzddDhTZunSa1m8+BBGRkZMKqRJGoikgpJEHJmZxwJExP7AHsC+wOcn\n2O8I4HjgfuAVqztIaU0wY8bWbLjhdk2HMaWWrXmVM9Jq0XhHzYhYF5gLnD5alplJqX3YaYL93gg8\nCvjE6o5RkiSt2iDUVGwGrA3c1FZ+E/C4TjtExGOAfweenZn3R8TqjVCSJK3SICQVPYmItShNHh/L\nzCtHi7vdf/78+WyyySZjyubNm8e8efPqC1KSpCG1cOFCFi5cOKZsyZIlXe07CEnFLcByVu5ouQVw\nY4ftNwaeCjwlIg6rytYCIiLuAXbNzDPGe7AFCxYwZ46DRCRJ6qTTD+3zzjuPuXPnrnLfxvtUZOa9\nwLnALqNlUdozdgHO7rDLCPAk4CnADtXlCODS6v/fruaQJUlSB4NQUwFwKHBMRJzLiiGlGwDHAETE\nZ4CtMnOfqhPnxa07R8TNwN2ZecmURi1Jkh4wEElFZp4YEZsBB1OaPc4HdsvMRdUms4E1Z+C8JElD\naCCSCoDMPBw4fJzb3riKfT+BQ0slSWpU430qJEnS9GBSIUmSamFSIUmSamFSIUmSamFSIUmSamFS\nIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmS\namFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFS\nIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmSamFSIUmS\namFSIUmSamFSIUmSamFSIUmSajHppCIiZkbEKyNi+zoCkiRJw6nnpCIiToyIt1f/zwB+D5wI/DEi\nXl1zfJIkaUis08c+zwU+Xf3/T0AAmwL7AB8GvldPaNLkLFq0iJGRkabDmHIzZ85k8803bzoMSWug\nfpKKTYBbq/9fAnwvM++KiP8FvlBbZNIkLFq0iL32OoDFi5c1HcqUmzVrPU444WsmFpKmXD9JxbXA\nThFxKyWpeG1V/mDg7roCkyZjZGSExYuXsd5672HGjK2bDmfKLF16LYsXH8LIyIhJhaQp109S8UXg\neOAO4BrgjKr8ucCF9YQl1WPGjK3ZcMPtmg5jSi1b8ypnJA2InpOKzDw8In4LbAP8LDPvr276C6VP\nhSRJWgP1lFRExLrApcA/ZuYPWm/LzP+tMzBJkjRcehpSmpn3AuuvplgkSdIQ62fyq8OA90dEP/0x\nJEnSNNVPYvA0YBdg14i4ELiz9cbMfFUdgUmSpOHST1JxO05wJUmS2vQz+uONqyMQSZI03FylVJIk\n1aKvpCIi9qwWFvtNRJzXeuk3kIg4MCKuioil1f0+bYJtd46IX0fELRFxV0RcEhEH9fvYkiRp8vpZ\npfSdwDeBm4AdgXOAxcC2wE/6CSIiXgMcAnysus8LgFMiYrNxdrkT+ArwHODxwCeBT0XEm/t5fEmS\nNHn91FS8DXhLZr4DuAf4fGa+GPgyZbGxfswHjszMYzPzUmB/4C5g304bZ+b5mfndzLwkM/+amScA\np1CSDEmS1IB+koptgLOr/5cCG1f/fxuY1+udVbN0zgVOHy3LzAROA3bq8j52rLY9o9fHlyRJ9egn\n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\nP9NnHIcCx0TEucA5lNEgGwDHAETEZ4CtMnOf6vpe1W3vBH4XEaO1HEszc6TPGCRJ0iT0nFRUIzPe\nHxGfBLZcmlGnAAAdJklEQVSnLCp2eWYu6zeIzDyxmpPiYEqzx/nAbpm5qNpkNrB1yy77UTp3HlZd\nRn2LMgxVkiRNsb7mqQDIzDuA39UVSGYeTqn96HTbG9uuv6Cux5UkSfXoKqmIiO8Db8jMker/cWXm\nq2qJTJIkDZVuayqWANnyvyRJ0hhdJRWjzQ/VqIyPAYsyc+nqDEySJA2XXoeUBnAF8PDVEIskSRpi\nPSUVmXk/cDllSKkkSdID+pn86gPAFyLiSXUHI0mShlc/Q0qPpUxMdUFE3EOZp+IBmfmQOgKTJEnD\npZ+kYj4rRoJIkiQB/c2oecxqiEOSJA25rvtURMRaEfG+iDgrIn4XEZ+NiBmrMzhJkjQ8eumo+SHg\n34G/A38D3sXYdTckSdIarJek4vXA2zLzJZn5SuBlwN4R0c8IEkmSNM30khBsA/xk9EpmnkbpsLlV\n3UFJkqTh00tSsQ5wd1vZvcC69YUjSZKGVS+jPwI4JiKWtZStDxwREXeOFrhKqSRJa6ZekopvdSg7\nrq5AJEnScOs6qRhdqVSSJKkTR25IkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRI\nkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRa\nmFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRI\nkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRamFRIkqRaDExSEREH\nRsRVEbE0In4TEU+bYNvZEXF8RPw5IpZHxKFTGaskSVrZQCQVEfEa4BDgY8COwAXAKRGx2Ti7rAfc\nDHwSOH9KgpQkSRMaiKQCmA8cmZnHZualwP7AXcC+nTbOzGsyc35mHgeMTGGckiRpHI0nFRGxLjAX\nOH20LDMTOA3Yqam4JElSbxpPKoDNgLWBm9rKbwJmT304kiSpH+s0HcBUmz9/PptsssmYsnnz5jFv\n3ryGIpIkaXAsXLiQhQsXjilbsmRJV/sOQlJxC7Ac2KKtfAvgxrofbMGCBcyZM6fuu5UkaVro9EP7\nvPPOY+7cuavct/Hmj8y8FzgX2GW0LCKiun52U3FJkqTeDEJNBcChwDERcS5wDmU0yAbAMQAR8Rlg\nq8zcZ3SHiNgBCGAjYPPq+j2ZeckUxy5JkhiQpCIzT6zmpDiY0uxxPrBbZi6qNpkNbN222x+ArP6f\nA+wFXANsu/ojliRJ7QYiqQDIzMOBw8e57Y0dyhpvupEkSSv4xSxJkmphUiFJkmphUiFJkmphUiFJ\nkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmph\nUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJ\nkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmph\nUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJ\nkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUiFJkmphUqEJ/e1v\nC5sOYSh53HrnMeuPx613HrPVZ2CSiog4MCKuioilEfGbiHjaKrZ/fkScGxF3R8RlEbHPVMW6Jrn+\net98/fC49c5j1h+PW+88ZqvPQCQVEfEa4BDgY8COwAXAKRGx2TjbPxL4MXA6sAPwJeAbEfHiqYhX\nkiStbCCSCmA+cGRmHpuZlwL7A3cB+46z/QHAXzLzfZn558w8DPjv6n4kSVIDGk8qImJdYC6l1gGA\nzEzgNGCncXZ7ZnV7q1Mm2F6SJK1m6zQdALAZsDZwU1v5TcDjxtln9jjbz4yI9TJzWYd91ge45JJL\nJhHq1Lv22mu5664l3Hff6fz97xdN+ePfffeN3Hjjj6b8cZctu4l77lnCRRddxJIlS3re3+PW+3Hz\nmHmu9cJzrXeTPdea1PLduf5E20WpFGhORGwJ/A3YKTN/21L+OeC5mblS7UNE/Bk4OjM/11K2O6Wf\nxQadkoqI2As4fjU8BUmS1hR7Z+YJ4904CDUVtwDLgS3ayrcAbhxnnxvH2X5knFoKKM0jewNXA3f3\nFakkSWum9YFHUr5Lx9V4UpGZ90bEucAuwEkAERHV9S+Ps9v/Abu3le1alY/3OIuBcbMrSZI0obNX\n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\nSYUkSarF/wcyIJV1TCMmjQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1186d7ad0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type</th>\n",
       "      <th>food</th>\n",
       "      <th>form</th>\n",
       "      <th>price_per_lb</th>\n",
       "      <th>yield</th>\n",
       "      <th>lb_per_cup</th>\n",
       "      <th>price_per_cup</th>\n",
       "      <th>value</th>\n",
       "      <th>Price_per_cup_edible</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apples</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>1.567515</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.242508</td>\n",
       "      <td>0.422373</td>\n",
       "      <td>0.469303</td>\n",
       "      <td>0.469303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fruit</td>\n",
       "      <td>apricots</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>3.040072</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.363763</td>\n",
       "      <td>1.189102</td>\n",
       "      <td>1.278604</td>\n",
       "      <td>1.278604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>fruit</td>\n",
       "      <td>bananas</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>0.566983</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.330693</td>\n",
       "      <td>0.292965</td>\n",
       "      <td>0.457758</td>\n",
       "      <td>0.457758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blackberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>5.774708</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.319670</td>\n",
       "      <td>1.922919</td>\n",
       "      <td>2.003041</td>\n",
       "      <td>2.003041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>fruit</td>\n",
       "      <td>blueberries</td>\n",
       "      <td>Fresh1</td>\n",
       "      <td>4.734622</td>\n",
       "      <td>0.95</td>\n",
       "      <td>0.319670</td>\n",
       "      <td>1.593177</td>\n",
       "      <td>1.677028</td>\n",
       "      <td>1.677028</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    type          food     form  price_per_lb  yield  lb_per_cup  \\\n",
       "0  fruit        apples   Fresh1      1.567515   0.90    0.242508   \n",
       "1  fruit      apricots   Fresh1      3.040072   0.93    0.363763   \n",
       "2  fruit       bananas   Fresh1      0.566983   0.64    0.330693   \n",
       "3  fruit  blackberries  Fresh1       5.774708   0.96    0.319670   \n",
       "4  fruit   blueberries   Fresh1      4.734622   0.95    0.319670   \n",
       "\n",
       "   price_per_cup     value  Price_per_cup_edible  \n",
       "0       0.422373  0.469303              0.469303  \n",
       "1       1.189102  1.278604              1.278604  \n",
       "2       0.292965  0.457758              0.457758  \n",
       "3       1.922919  2.003041              2.003041  \n",
       "4       1.593177  1.677028              1.677028  "
      ]
     },
     "execution_count": 396,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data_set['Price_per_cup_edible'] = final_data_set['price_per_cup']/final_data_set['yield']\n",
    "\n",
    "cheap_price_per_val = final_data_set.sort_values('Price_per_cup_edible', ascending=True).head(5)\n",
    "cheap_price_per_val = cheap_price_per_val.set_index('food')\n",
    "\n",
    "objects_che_val = cheap_price_per_val.index.values.tolist()\n",
    "y_pos_che_val = np.arange(len(objects_che_val))\n",
    "\n",
    "#Plot the data\n",
    "plt.bar(y_pos_che_val, cheap_price_per_val['Price_per_cup_edible'], align='center', alpha=0.7)\n",
    "\n",
    "#Set up the graphs\n",
    "plt.xticks(y_pos_che_val, objects_che_val, rotation = 'vertical')\n",
    "plt.ylabel('Price in Dollars')\n",
    "plt.title('Best Value Per Purchase in Price per Edible Cup')\n",
    "plt.show()\n",
    "final_data_set.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To figure out the best combination of price and yield I created a new column that took price_per_cup and dividied by yield. This calculation penalized foods with low yields which do not have a lot of edible portions and rewarded food that yielded a lot. The result was a slight reshuffling of the food items with potatoes solidly the best value food, followed by iceberg lettuce, watermelon (which got penalized for a yield of aroudn .5), radish and then onions. \n",
    "\n",
    "My above calculation did not take into account the nutritional elements of these food since I did not have data. Therefore, if I were to obtain the nutritional data I would combine that information with the price_per_cup_edible column to obtain an overall value. The combination between these factors could be adjusted by weights to provide extra emphasis on certain areas. For instance if an individual wanted to be cost effective they would weight price_per_cup_edible as twice as important as the nutritional part. \n",
    "\n",
    "My hypothesis would be that the more nutritional benefits a food item provides the more expensive that item would be. This is due to there being a higher demand among nutritionally minded individuals. Due to the higher demand and more intensive growth demands of nutritional food items I would believe that these food items would be the most expensive. Meanwhile, the opposite is true for non-nutritious food items that were easy to grow and are low demand resulting in these typicall having the lowest price_per_cup."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
